before_script:
  - docker info
  - apk add --no-cache bash

    #variables:
  #XODR_FILES: eval(find -name "*.xodr")
  #XOSC_FILES: 'find -name "*.xosc"'
  #FMU_FILES: 'find -name "*.fmu"'

stages:
  - build
  - opendrive
  - openscenario
  - FMI
  

build_image:
  tags:
    - linux
    - docker  
  
  stage: build
  
  script:
    #if you're behind a proxy configure your client according to https://docs.docker.com/network/proxy/
    #- docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t asc23:latest .
    #- docker push $CI_REGISTRY/asc23:latest
 #   - docker run my-docker-image /script/to/run/tests

check_opendrive:
  tags:
    - linux
    - docker

  stage: opendrive

  script:
    - XODR_FILES=$(find -name "*.xodr")
    - echo $XODR_FILES
    - echo $CI_PROJECT_DIR
    - ls -a $CI_PROJECT_DIR 
    - chmod +x $CI_PROJECT_DIR/check_openDRIVE.sh  
    - for FILE in $XODR_FILES; 
      do 
        $CI_PROJECT_DIR/check_openDRIVE.sh $FILE >> openDriveCheck.txt; 
      done
  artifacts:
    expose_as: 'openDRIVE Report'
    paths: ['openDriveCheck.txt']

check_openscenario:
  tags:
    - linux
    - docker

  stage: openscenario

  script:
    - XODR_FILES=$(find -name "*.xosc")
    - echo $XODR_FILES
    - echo $CI_PROJECT_DIR
    - ls -a $CI_PROJECT_DIR 
    - chmod +x $CI_PROJECT_DIR/check_openSCENARIO.sh  
    - for FILE in $XODR_FILES; 
      do 
        $CI_PROJECT_DIR/check_openSCENARIO.sh $FILE >> openSCENARIOCheck.txt; 
      done
  artifacts:
    expose_as: 'openSCENARIO Report'
    paths: ['openSCENARIOCheck.txt']